import FEX
import sys
import socket
import json
import string
import os
mapw = 10
maph = 10

mapdata=""

controller_1 = None
hero = None
game = None

def make_shared_ptr( p ):
    p.__disown__()
    ret = FEX.make_gameobj_ptr(p)
    return ret

def grid_to_gl(point):
    return FEX.CCPoint(point.x*32+300,point.y*32+300)

class Dot(FEX.SpriteBase):
    def __init__(self,point):
        FEX.SpriteBase.__init__( self, grid_to_gl(point) ,FEX.map_string_string({ "sprite_desc" : "dot"}) )
        self.light()
    def light(self):
        for i in self.get_components():
            i.play_anim("light")
    def dim(self):
        for i in self.get_components():
            i.play_anim("dim")

class GameSnake(FEX.GameBase):

    def __init__(self):
        self.dots=[]
        FEX.GameBase.__init__(self)
        FEX.set_game( self )
        self.should_end = False
        for i in range(mapw):
            for j in range(maph):
                self.create_dot(i,j,0)
    
    
    def create_dot(self,x,y,color):
        dot = Dot(FEX.CCPoint(x,y))
        self.dots.append(dot)
        FEX.get_game().add_game_object(make_shared_ptr(dot),"root")
        return
    
    def update_map(self):
        global s
        global mapdata
        #send command
        command = '{"action":"new_snake"}\r\n'
        s.send(command)
        #read socket
        while(True):
            mapdata = mapdata + s.recv(10)
            #see if we got a correct snapshot of map
            index = string.find(mapdata,"\r\n")
            if index >= 0:
                print index
                map_snap = mapdata[0:index]
                mapdata = mapdata[index+2:]
                break
        
        #initial map grids
        map_view = []
        for i in range(mapw*maph):
            map_view.append(" ")
        
        #parse map snap
        parsed_map = json.loads(map_snap)
        for food in parsed_map["map"]:
            pos = eval('[' + food + ']')
            map_view[pos[0]+pos[1]*mapw]="O"
        
        for key in parsed_map["snakes"]:
            bodys = parsed_map["snakes"][key]
            for body in bodys:
                pos = eval('[' + body + ']')
                map_view[pos[0]+pos[1]*mapw]="*"
        
        
        #draw map view
        for i in range(mapw):
            for j in range(maph):
                linear_index = i+j*mapw

                if map_view[linear_index] == "*":
                    self.dots[linear_index].light()
                else:
                    self.dots[linear_index].dim()
                


    def update(self, *args):
        FEX.GameBase.update(self, *args)
        self.update_map()


def run_game():
    print sys.path
    global game
    global controller_1
    global hero
    global s
    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_addr = "192.168.1.5"
    server_port = 10080
    
    s.connect( (server_addr, int(server_port)))
    print "connected to:", server_addr, server_port
    
    game = GameSnake()
    game.__disown__()
    FEX.set_game(game)





